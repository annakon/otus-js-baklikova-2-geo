{"version":3,"file":"bundle.js","mappings":";4QACA,smNACA,YAAC,iBAGgBA,EAHhB,EAYUC,EAKAC,EAIMC,EArBhB,EAoCgBC,EApChB,kHAoCC,WAA2BC,EAAIC,GAA/B,2FACuCH,EAA6BG,GADpE,cACQC,EADR,gBAEmCA,EAAuBC,OAF1D,OAEQC,EAFR,OAIQC,GAAQD,EAAmBE,KAAKD,KAAO,QAAQE,QAAQ,GAE7DP,EAAGQ,UAAH,cAAsBJ,EAAmBK,KAAzC,mBAAwDJ,EAAxD,+FACuED,EAAmBM,QAAQ,GAAGC,KADrG,aANF,4CApCD,uBAoCgBZ,EApChB,gFAqBC,WAA4CE,GAA5C,4EACe,KAATA,EADN,gCAE2BW,MAAM,uCAFjC,cAEUC,EAFV,gBAGuBA,EAASV,OAHhC,cAGUA,EAHV,yBAKWS,MAAM,uDAAD,OAC6CT,EAAKW,SADlD,gBACkEX,EAAKY,UADvE,6CALhB,gCAUSH,MAAM,qDAAD,OAC2CX,EAD3C,6CAVd,4CArBD,uBAqBgBH,EArBhB,4CAiBUD,EAjBV,SAiBmBG,EAAIgB,GACpBhB,EAAGQ,UAAH,UAAkBQ,EAAMC,KAAI,SAACjB,GAAD,wBAAmBA,EAAnB,gBAAkCkB,KAAK,IACpE,EAPQtB,EAZV,SAYmBoB,GAEhBG,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,GAC7C,EAfF,kCAGC,iBAAAO,EAAA,oEAEY,QADJA,EAAIJ,aAAaK,QAAQ,SADjC,yCAGW,IAHX,gCAKSH,KAAKI,MAAMF,EAAG,KALvB,4CAHD,uBAGgB5B,EAHhB,2CA+CO+B,EAAOC,SAASC,cAAc,QAC9BC,EAASF,SAASC,cAAc,kBAhDvC,UAmDqBjC,IAnDrB,QAmDOqB,EAnDP,OAsDCnB,EAASgC,EAAQb,GAEjBjB,EAAY4B,SAASC,cAAc,cAAe,IAElDF,EAAKI,iBAAiB,UAAU,SAACC,GAE/BA,EAAGC,iBAGH,IACMC,EADcF,EAAGG,OACGN,cAAc,SAChCO,EAAUF,EAAVE,MACRF,EAAME,MAAQ,GAGTnB,EAAMoB,SAASD,IAAQnB,EAAMqB,KAAKF,GACnCnB,EAAMsB,OAAS,IAAItB,EAAMuB,QAG7B1C,EAASgC,EAAQb,GAGjBpB,EAASoB,GACTjB,EAAY4B,SAASC,cAAc,cAAeO,EACnD,IA9EF,2CAAD","sources":["webpack://otus-js-baklikova-2-geo/./src/index.js"],"sourcesContent":["import \"../css/styles.css\";\n\n(async function () {\n  // Должна возвращать список пользователя\n  // Если пользователь ничего не вводил - пустой список\n  async function readList() {\n    const a = localStorage.getItem(\"list\");\n    if (a === null) {\n      return [];\n    }\n    return JSON.parse(a, []);\n  }\n\n  // Сохраняет список\n  function saveList(items) {\n    // let unique = [...new Set(items)];\n    localStorage.setItem(\"list\", JSON.stringify(items));\n  }\n\n  function drawList(el, items) {\n    el.innerHTML = `${items.map((el) => `<option>${el}</option>`).join(\"\")}`;\n  }\n\n  async function returnResponseOpenweathermap(city) {\n    if (city === \"\") {\n      const response = await fetch(\"https://get.geojs.io/v1/ip/geo.json\");\n      const json = await response.json();\n\n      return fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${json.latitude}&lon=${json.longitude}&appid=2dd5152e26591562500eba5a006f9a67`\n      );\n    }\n\n    return fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=2dd5152e26591562500eba5a006f9a67`\n    );\n  }\n\n  async function drawWeather(el, city) {\n    const responseOpenweathermap = await returnResponseOpenweathermap(city);\n    const jsonOpenweathermap = await responseOpenweathermap.json();\n\n    const temp = (jsonOpenweathermap.main.temp - 273.15).toFixed(0);\n\n    el.innerHTML = `<h1>${jsonOpenweathermap.name}</h1><p>${temp}&deg;</p>\n                   <img alt=\"icon\" src=\"http://openweathermap.org/img/wn/${jsonOpenweathermap.weather[0].icon}@2x.png\">`;\n  }\n\n  // Получаем указатели на нужные элементы\n  const form = document.querySelector(\"form\");\n  const listEl = document.querySelector(\"#recentResults\");\n\n  // Читаем список при старте\n  const items = await readList();\n\n  // и отрисовываем список\n  drawList(listEl, items);\n\n  drawWeather(document.querySelector(\"#container\"), \"\");\n\n  form.addEventListener(\"submit\", (ev) => {\n    // чтобы не перезагружать страницу\n    ev.preventDefault();\n\n    // читаем значение из формы\n    const formElement = ev.target;\n    const input = formElement.querySelector(\"input\");\n    const { value } = input;\n    input.value = \"\";\n\n    // добавляем элемент в список\n    if (!items.includes(value)) items.push(value);\n    if (items.length > 10) items.shift();\n\n    // обновляем список\n    drawList(listEl, items);\n\n    // сохраняем список\n    saveList(items);\n    drawWeather(document.querySelector(\"#container\"), value);\n  });\n})();\n"],"names":["readList","saveList","drawList","returnResponseOpenweathermap","drawWeather","el","city","responseOpenweathermap","json","jsonOpenweathermap","temp","main","toFixed","innerHTML","name","weather","icon","fetch","response","latitude","longitude","items","map","join","localStorage","setItem","JSON","stringify","a","getItem","parse","form","document","querySelector","listEl","addEventListener","ev","preventDefault","input","target","value","includes","push","length","shift"],"sourceRoot":""}