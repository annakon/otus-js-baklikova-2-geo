{"version":3,"file":"bundle.js","mappings":";4QACA,smNACO,SAAeA,IAAtB,iEAAO,iBAAAC,EAAA,oEAEK,QADJA,EAAIC,aAAaC,QAAQ,SAD1B,yCAGI,IAHJ,gCAKEC,KAAKC,MAAMJ,EAAG,KALhB,kEASA,SAASK,EAASC,GACvBL,aAAaM,QAAQ,OAAQJ,KAAKK,UAAUF,GAC7C,oPCZD,smNADO,SAAeG,EAAtB,oEAAO,WAA4CC,GAA5C,4EACQ,KAATA,EADC,gCAEoBC,MAAM,uCAF1B,cAEGC,EAFH,gBAGgBA,EAASC,OAHzB,cAGGA,EAHH,yBAKIF,MAAM,uDAAD,OAC6CE,EAAKC,SADlD,gBACkED,EAAKE,UADvE,6CALT,gCAUEJ,MAAM,qDAAD,OAC2CD,EAD3C,6CAVP,qTCCP,8hGAAAM,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IACIV,EADEW,EAAK,gBAGIC,EAAY,EAAZA,oEAAf,WAA2BC,EAAIT,GAA/B,gBAiCWU,EAjCX,wEAiCWA,EAjCX,WAmCkB,IAAIC,MAAMC,IAAI,MAAO,CAKjCC,OAAQ,CAACC,EAAmBC,MAAMC,IAAKF,EAAmBC,MAAME,KAGhEC,KAAM,GAET,EA7CH,SACuCnB,EAA6BC,GADpE,cACQmB,EADR,gBAEmCA,EAAuBhB,OAF1D,UAIiC,OAFzBW,EAFR,QAIyBM,IAJzB,wBAKIC,MAAMP,EAAmBQ,SAL7B,8BASQC,GAAQT,EAAmBU,KAAKD,KAAOhB,GAAIkB,QAAQ,GAEzDhB,EAAGiB,UAAH,cAAsBZ,EAAmBa,KAAzC,8CAAmFJ,EAAnF,+FACyET,EAAmBc,QAAQ,GAAGC,KADvG,aAGMC,EAASC,SAASC,cAAc,kBAChCC,EAAaF,SAASC,cAAc,eAE7B,KAAThC,EAjBN,kCAmBkBX,IAnBlB,QAmBIO,EAnBJ,eAqBQsC,EAAiB,KAATlC,EAAcc,EAAmBa,KAAO3B,EAEjDJ,EAAMuC,SAASD,IAAQtC,EAAMwC,KAAKF,GACnCtC,EAAMyC,OAAS,IAAIzC,EAAM0C,QAE7BC,EAASN,EAAYH,EAAQlC,GAE7BD,EAASC,GAETmC,SAASS,eAAe,OAAOd,UAAY,GAE3Cf,MAAM8B,MAAM/B,GAhCd,mEAgDA,SAAS6B,EAASG,EAAOjC,EAAIb,GAE3B,IAAI+C,EADJlC,EAAGiB,UAAH,UAAkB9B,EAAMgD,KAAI,SAACnC,GAAD,wBAAmBA,EAAnB,gBAAkCoC,KAAK,KAEnE,IAHkC,eAGzBvC,IACPqC,EAAMZ,SAASe,cAAc,WACzBpB,UAAY9B,EAAMU,GACtBqC,EAAII,iBAAiB,SAAS,WAC5BvC,EAAYuB,SAASC,cAAc,cAAepC,EAAMU,GACzD,IACDoC,EAAMM,YAAYL,EATc,EAGzBrC,EAAI,EAAGA,EAAIV,EAAMyC,OAAQ/B,GAAK,EAAG,EAAjCA,EAQV,CAED,SAAS2C,EAAYC,GAEnBA,EAAGC,iBAGH,IACMC,EADcF,EAAGG,OACGrB,cAAc,SAChCE,EAAUkB,EAAVlB,MACRkB,EAAMlB,MAAQ,GAEd1B,EAAYuB,SAASC,cAAc,cAAeE,EACnD,mCAEM,qFACQH,SAASC,cAAc,QAC/Be,iBAAiB,SAAUE,GAF3B,kBAIEzC,EAAYuB,SAASC,cAAc,cAAe,KAJpD,kEC7EPsB,OAAOC,KD6EA,WAAP","sources":["webpack://otus-js-baklikova-2-geo/./src/localStorage.js","webpack://otus-js-baklikova-2-geo/./src/api.js","webpack://otus-js-baklikova-2-geo/./src/init.js","webpack://otus-js-baklikova-2-geo/./src/index.js"],"sourcesContent":["// Должна возвращать список пользователя\n// Если пользователь ничего не вводил - пустой список\nexport async function readList() {\n  const a = localStorage.getItem(\"list\");\n  if (a === null) {\n    return [];\n  }\n  return JSON.parse(a, []);\n}\n\n// Сохраняет список\nexport function saveList(items) {\n  localStorage.setItem(\"list\", JSON.stringify(items));\n}\n","export async function returnResponseOpenweathermap(city) {\n  if (city === \"\") {\n    const response = await fetch(\"https://get.geojs.io/v1/ip/geo.json\");\n    const json = await response.json();\n\n    return fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${json.latitude}&lon=${json.longitude}&appid=2dd5152e26591562500eba5a006f9a67`\n    );\n  }\n\n  return fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=2dd5152e26591562500eba5a006f9a67`\n  );\n}\n","import { readList, saveList } from \"./localStorage\";\nimport { returnResponseOpenweathermap } from \"./api\";\n\nconst T0 = 273.15;\nlet items;\n\nasync function drawWeather(el, city) {\n  const responseOpenweathermap = await returnResponseOpenweathermap(city);\n  const jsonOpenweathermap = await responseOpenweathermap.json();\n\n  if (jsonOpenweathermap.cod !== 200) {\n    alert(jsonOpenweathermap.message);\n    return;\n  }\n\n  const temp = (jsonOpenweathermap.main.temp - T0).toFixed(0);\n\n  el.innerHTML = `<h1>${jsonOpenweathermap.name}</h1><div id=\"plusButton\"></div><p>${temp}&deg;</p>\n                   <img alt=\"icon\" src=\"http://openweathermap.org/img/wn/${jsonOpenweathermap.weather[0].icon}@2x.png\">`;\n\n  const listEl = document.querySelector(\"#recentResults\");\n  const buttonList = document.querySelector(\"#plusButton\");\n\n  if (city === \"\") {\n    // Читаем список при старте\n    items = await readList();\n  }\n  const value = city === \"\" ? jsonOpenweathermap.name : city;\n  // добавляем элемент в список\n  if (!items.includes(value)) items.push(value);\n  if (items.length > 10) items.shift();\n  // обновляем список\n  drawList(buttonList, listEl, items);\n  // сохраняем список\n  saveList(items);\n\n  document.getElementById(\"map\").innerHTML = \"\";\n\n  ymaps.ready(initMap);\n  function initMap() {\n    // Создание карты.\n    const myMap = new ymaps.Map(\"map\", {\n      // Координаты центра карты.\n      // Порядок по умолчанию: «широта, долгота».\n      // Чтобы не определять координаты центра карты вручную,\n      // воспользуйтесь инструментом Определение координат.\n      center: [jsonOpenweathermap.coord.lat, jsonOpenweathermap.coord.lon],\n      // Уровень масштабирования. Допустимые значения:\n      // от 0 (весь мир) до 19.\n      zoom: 7,\n    });\n  }\n}\n\nfunction drawList(butEl, el, items) {\n  el.innerHTML = `${items.map((el) => `<option>${el}</option>`).join(\"\")}`;\n  let but;\n  for (let i = 0; i < items.length; i += 1) {\n    but = document.createElement(\"button\");\n    but.innerHTML = items[i];\n    but.addEventListener(\"click\", () => {\n      drawWeather(document.querySelector(\"#container\"), items[i]);\n    });\n    butEl.appendChild(but);\n  }\n}\n\nfunction onCityClick(ev) {\n  // чтобы не перезагружать страницу\n  ev.preventDefault();\n\n  // читаем значение из формы\n  const formElement = ev.target;\n  const input = formElement.querySelector(\"input\");\n  const { value } = input;\n  input.value = \"\";\n\n  drawWeather(document.querySelector(\"#container\"), value);\n}\n\nexport async function init() {\n  const form = document.querySelector(\"form\");\n  form.addEventListener(\"submit\", onCityClick);\n\n  return drawWeather(document.querySelector(\"#container\"), \"\");\n}\n","import \"../css/styles.css\";\nimport { init } from \"./init\";\n\nwindow.init = init;\n\nexport default init;\n"],"names":["readList","a","localStorage","getItem","JSON","parse","saveList","items","setItem","stringify","returnResponseOpenweathermap","city","fetch","response","json","latitude","longitude","i","T0","drawWeather","el","initMap","ymaps","Map","center","jsonOpenweathermap","coord","lat","lon","zoom","responseOpenweathermap","cod","alert","message","temp","main","toFixed","innerHTML","name","weather","icon","listEl","document","querySelector","buttonList","value","includes","push","length","shift","drawList","getElementById","ready","butEl","but","map","join","createElement","addEventListener","appendChild","onCityClick","ev","preventDefault","input","target","window","init"],"sourceRoot":""}